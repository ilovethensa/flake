# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];
  boot = {
    kernelModules = ["kvm-amd"];
    initrd = {
      availableKernelModules = ["xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod"];
      luks.devices."cryptroot".device = "/dev/disk/by-uuid/0e675cdf-192e-44af-bda7-2d13860d0436";
    };
  };
  fileSystems = {
    "/" = {
      device = "none";
      fsType = "tmpfs";
      options = ["defaults" "size=2G" "mode=755"];
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/B297-73FE";
      fsType = "vfat";
    };
    "/nix" = {
      device = "/dev/disk/by-uuid/44a375ec-73f9-4ec0-a657-176e091897c3";
      fsType = "btrfs";
      options = ["subvol=@nix" "compress-force=zstd:15" "defaults" "noatime"];
    };
    "/home" = {
      device = "/dev/disk/by-uuid/44a375ec-73f9-4ec0-a657-176e091897c3";
      fsType = "btrfs";
      options = ["subvol=@home" "compress-force=zstd:15" "defaults" "noatime"];
    };
  };
  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0f0u8.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
